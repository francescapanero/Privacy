}
dim(l)
n_K <- rep(0,K-2)
for(k in 1:(K-3)) n_K[k] <- rpois(1, 2*w_K[k]*w_star*Z[k])
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
l[k,] <- sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE)
}
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
l[k,1:n_K[k]] <- sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE)
}
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
l[k,1:n_K[k]] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
}
k=1
l[1,]
max(n_K)
n_K
l[1,1:n_K[1]]
l <- matrix(0,K-2,max(n_K))
l[1,1:n_K[1]]
k
l[k,1:n_K[k]] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
l[1,1:n_K[1]]
k=2
l[k,1:n_K[k]] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
l[2,1:n_K[2]]
k=K-3
l[k,1:n_K[k]] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
l[K-3,1:n_K[K-3]]
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
l[k,1:n_K[k]] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
}
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
l[k,(1:n_K[k])] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
}
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
if(n_K[k]!=0) l[k,(1:n_K[k])] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
}
l[K-2,] <- rep(K,n_K[K-2])
if(n_K[K-2]!=0) l[K-2,] <- rep(K,n_K[K-2])
for(k in 1:(K-2)){
if(n_K[k]!=0)
for(i in 1:n_K[k])
if(runif(1)<(w_K[l[k,i]]/w_star))
for(j in 1:n)
for(m in 1:n)
if(c_loc(j)==k & c_loc(m)==l[k,i])
if(runif(1)<(W[j]*W[m]/(w_K[k]*w_K[m])))
if(runif(1)<(((1+abs(X[j]-X[m]))^beta)/((1-delta+delta*abs(k-l[k,i]))^beta)))
G[j,m] = G[j,m] + 1
}
n=100
G <- matrix(0, n, n)
beta <- 2
# generate locations X uniform on [0,x_max]
x_max <- 120
X <- runif(n,0,x_max)
# generate weights W from power law distribution -tau
Y <- runif(n)
w_min <- 0.1
w_max <- 10000
tau <- 2
W <- ((w_max^{-tau+1}-w_min^{-tau+1})*Y+w_min^{-tau+1})^{1/(-tau+1)}
library(pracma)
K=n
A <- seq(0, x_max, length.out = 101)
delta <- A[2]
c_loc <- histc(X, A)$bin
w_K <- rep(0,K)
for(k in 1:K){
w_K[k] <- sum(W[c_loc==k])
}
w_star <- max(w_K)
Z <- rep(0,K-2)
for(k in 1:(K-2))
for(l in (k+2):K)
Z[k] <- Z[k] + (1-delta+delta*(l-k))^{-beta}
p_K <- matrix(0,K-2,K)
for(k in 1:(K-2)){
for(l in (k+2):K){
p_K[k,l] <- 1/(Z[k]*(1-delta+delta*(l-k))^{beta})
}
}
n_K <- rep(0,K-2)
for(k in 1:(K-3)) n_K[k] <- rpois(1, 2*w_K[k]*w_star*Z[k])
l <- matrix(0,K-2,max(n_K))
for(k in 1:(K-3)){
if(n_K[k]!=0) l[k,(1:n_K[k])] <- c(sample((k+2):K, n_K[k], prob = p_K[k,(k+2):K], replace=TRUE))
}
if(n_K[K-2]!=0) l[K-2,] <- rep(K,n_K[K-2])
for(k in 1:(K-2)){
if(n_K[k]!=0)
for(i in 1:n_K[k])
if(runif(1)<(w_K[l[k,i]]/w_star))
for(j in 1:n)
for(m in 1:n)
if(c_loc(j)==k & c_loc(m)==l[k,i])
if(runif(1)<(W[j]*W[m]/(w_K[k]*w_K[m])))
if(runif(1)<(((1+abs(X[j]-X[m]))^beta)/((1-delta+delta*abs(k-l[k,i]))^beta)))
G[j,m] = G[j,m] + 1
}
for(k in 1:(K-2)){
if(n_K[k]!=0)
for(i in 1:n_K[k])
if(runif(1)<(w_K[l[k,i]]/w_star))
for(j in 1:n)
for(m in 1:n)
if(c_loc[j]==k & c_loc[m]==l[k,i])
if(runif(1)<(W[j]*W[m]/(w_K[k]*w_K[m])))
if(runif(1)<(((1+abs(X[j]-X[m]))^beta)/((1-delta+delta*abs(k-l[k,i]))^beta)))
G[j,m] = G[j,m] + 1
}
G
sum(G==!)
sum(G==1)
which(G==1)
n=100
G <- matrix(0, n, n)
beta <- 2
# generate locations X uniform on [0,x_max]
x_max <- 120
X <- runif(n,0,x_max)
# generate weights W from power law distribution -tau
Y <- runif(n)
w_min <- 0.1
w_max <- 10000
tau <- 2
W <- ((w_max^{-tau+1}-w_min^{-tau+1})*Y+w_min^{-tau+1})^{1/(-tau+1)}
G <- matrix(0,n,n)
for(i in 1:n){
for(j in 1:n){
if(runif(1)>exp(-2*W[i]*W[j]/((1+abs(X[i]-X[j]))^beta)))
G[i,j] <- 1
}
}
sum(G==1)
rotate <- function(x) t(apply(x, 2, rev))
image(rotate(G))
n=1000
G <- matrix(0, n, n)
beta <- 2
# generate locations X uniform on [0,x_max]
x_max <- 120
X <- runif(n,0,x_max)
# generate weights W from power law distribution -tau
Y <- runif(n)
w_min <- 0.1
w_max <- 10000
tau <- 2
W <- ((w_max^{-tau+1}-w_min^{-tau+1})*Y+w_min^{-tau+1})^{1/(-tau+1)}
for(i in 1:n){
for(j in 1:n){
if(runif(1)>exp(-2*W[i]*W[j]/((1+abs(X[i]-X[j]))^beta)))
G[i,j] <- 1
}
}
rotate <- function(x) t(apply(x, 2, rev))
image(rotate(G))
head(trees)
plot(Volume ~ Height, data=trees)
plot(Volume ~ Girth, data=trees)
setwd("~/Documents/Unito - SDS/Tesi/Dati")
######## IMPORTO I DATI
data <- read.table("campione_cal_3.txt", header=FALSE)
n=sum(data)
N=1150934
nrow(data)
sum(data==1)
m=seq(from=floor(n/10),to=N-n,by=floor(n/10))
m=c(m,N-n)
lambda2=m[11:length(m)]/(floor(n/10)*10)
lambda1=m/(floor(n/10)*10);
f_bar <- mean(data$V1)
K <- rep(0,length(lambda2))
for(i in 1:length(lambda2))
{
K[i] <- (n*(lambda2[i]+1))/f_bar
}
freqfreq = rep(1,max(data$V1))
for(i in 1:max(data$V1))
{
freqfreq[i]=sum(data$V1==i)
}
a=which(freqfreq!=0)
freqfreq0=matrix(1, 2, length(a))
freqfreq0[1,]=a
freqfreq0[2,]=freqfreq[a]
######## alpha, beta METHOD OF MOMENTS
norm <- data$V1-f_bar
beta_mm=sum(norm^2)/(n*(lambda2+1)*f_bar*(dim(data)[1]-1))-1/(n*(lambda2+1))
alpha_mm=1/(K*beta_mm)
######## alpha, beta MLE
library(MASS)
out <- fitdistr(data$V1, "negative binomial")
alpha_mle <- out$estimate[1]
beta_mle <- 1/(K*alpha_mle)
######## Ups BETHLEHEM MM
Up_bmm=n*(lambda2+1)*(1+n*(lambda2+1)*beta_mm)^(-(1+alpha_mm))
Ups_bmm=Up_bmm/(lambda2+1) #155
Ups_bmm[length(lambda2)]
######## Ups BETHLEHEM MLE
Up_bmle=n*(lambda2+1)*(1+n*(lambda2+1)*beta_mle)^(-(1+alpha_mle))
Ups_bmle=Up_bmle/(lambda2+1)
Ups_bmle[length(lambda2)]
######## Ups SKINNER MM
Ups_smm <- nrow(data)*((1+(n*(lambda2+1))*beta_mm)/(1+n*beta_mm))^(-1-alpha_mm)
Ups_smm[length(lambda2)]
######## Ups SKINNER MLE
Ups_smle <- nrow(data)*((1+(n*(lambda2+1))*beta_mle)/(1+n*beta_mle))^(-1-alpha_mle)
Ups_smle[length(lambda2)]
######## STIME BETHLEHEM & SKINNER CON K=90000
K1=90000
beta_mm_K1=sum(norm^2)/(N*f_bar*(dim(data)[1]-1))-1/N
alpha_mm_K1=1/(K1*beta_mm_K1)
alpha_mle_K1 <- out$estimate[1]
beta_mle_K1 <- 1/(K1*alpha_mle_K1)
Up_bmm_K1=N*(1+N*beta_mm_K1)^(-(1+alpha_mm_K1))
Ups_bmm_K1=Up_bmm_K1*n/N
Up_bmle_K1=N*(1+N*beta_mle_K1)^(-(1+alpha_mle_K1))
Ups_bmle_K1=Up_bmle_K1*n/N
Ups_smm_K1 <- nrow(data)*((1+N*beta_mm_K1)/(1+n*beta_mm_K1))^(-1-alpha_mm_K1)
Ups_smle_K1 <- nrow(data)*((1+N*beta_mle_K1)/(1+n*beta_mle_K1))^(-1-alpha_mle_K1)
######## Ups EMPRICAL BAYES
stima_eb=rep(1,length(lambda1))
for(t in 1:length(lambda1))
{
stima_eb[t]=0
for(i in 1:dim(freqfreq0)[2])
{
stima_eb[t]=stima_eb[t]+(((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda1[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i])
}
}
library(ggplot2)
df1 <- data.frame(lambda1[1:10],stima_eb[1:10])
ggplot(df1, aes(x=lambda1[1:10]))
Plot1 <- ggplot(df1,  aes(x=LAMBDA, y=ESTIMATE)) +
geom_line(aes(x=lambda1[1:10], y=stima_eb[1:10], col="stima_eb"),size=2.5)
Plot1 +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
######## Ups POISSON & BINOMIAL
stima_eb_poiss = rep(0,length(lambda2))
for(t in 1:length(lambda2))
{
par_poiss=(1/(4*lambda2[t]))*log(n/(2*lambda2[t]-1))
#c[t]=((lambda2[t]/(1+lambda2[t]))^(2))*((1+lambda2[t])/(1+2*lambda2[t]))
par_bin1=round((2/7)*log2((n*4*lambda2[t]^2)/((2^(7/2)-1)*((lambda2[t])^(2))-2*lambda2[t]-1)))
stima_eb_poiss[t]=0
stima_eb_bin1[t]=0
for(i in 1:dim(freqfreq0)[2])
{
valore_poiss=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-ppois(freqfreq0[1,i]-1,par_poiss))
if(is.na(valore_poiss))
{
valore_poiss=0
}
stima_eb_poiss[t]=stima_eb_poiss[t]+valore_poiss
valore_bin1=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-pbinom(freqfreq0[1,i]-1,par_bin1,1/(lambda2[t]+1)))
if(is.na(valore_bin1))
{
valore_bin1=0
}
stima_eb_bin1[t]=stima_eb_bin1[t]+valore_bin1
}
}
stima_poiss <- read.table("stima_eb_poiss_3.txt")
stima_eb_poiss <- stima_poiss$V1
stima_eb_poiss[length(lambda2)]
stima_eb_bin1[length(lambda2)]
######## PLOT
library(ggplot2)
df <- data.frame(lambda2,Ups_bmm,Ups_bmle,Ups_smm,Ups_smle,stima_eb_poiss,stima_eb_bin1)
ggplot(df, aes(x=lambda2))
Plot <- ggplot(df,  aes(x=LAMBDA, y=ESTIMATES)) +
geom_line(aes(x=lambda2, y=Ups_bmm, col="Ups_bmm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_bmle, col="Ups_bmle"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smm, col="Ups_smm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smle, col="Ups_smle"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_poiss, col="stima_eb_poiss"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_bin1, col="stima_eb_bin1"),size=2.5) +
geom_point(aes(x=9, y=469, col="black"), size=2.5)
Plot +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
#scale_fill_manual(breaks=c("Ups_bmm", "Ups_bmle", "Ups_smm", "Ups_smle", "stima_eb_poiss", "stima_eb_bin1"),labels=c("Bethlehem MM", "Bethlehem MLE", "Skinner MM", "Skinner MLE", "EB Poisson", "EB Binomial"))
######## IMPORTO I DATI
data <- read.table("campione_cal_3.txt", header=FALSE)
n=sum(data)
N=1150934
nrow(data)
sum(data==1)
m=seq(from=floor(n/10),to=N-n,by=floor(n/10))
m=c(m,N-n)
lambda2=m[11:length(m)]/(floor(n/10)*10)
lambda1=m/(floor(n/10)*10);
f_bar <- mean(data$V1)
K <- rep(0,length(lambda2))
for(i in 1:length(lambda2))
{
K[i] <- (n*(lambda2[i]+1))/f_bar
}
freqfreq = rep(1,max(data$V1))
for(i in 1:max(data$V1))
{
freqfreq[i]=sum(data$V1==i)
}
a=which(freqfreq!=0)
freqfreq0=matrix(1, 2, length(a))
freqfreq0[1,]=a
freqfreq0[2,]=freqfreq[a]
######## alpha, beta METHOD OF MOMENTS
norm <- data$V1-f_bar
beta_mm=sum(norm^2)/(n*(lambda2+1)*f_bar*(dim(data)[1]-1))-1/(n*(lambda2+1))
alpha_mm=1/(K*beta_mm)
######## alpha, beta MLE
library(MASS)
out <- fitdistr(data$V1, "negative binomial")
alpha_mle <- out$estimate[1]
beta_mle <- 1/(K*alpha_mle)
######## Ups BETHLEHEM MM
Up_bmm=n*(lambda2+1)*(1+n*(lambda2+1)*beta_mm)^(-(1+alpha_mm))
Ups_bmm=Up_bmm/(lambda2+1) #155
Ups_bmm[length(lambda2)]
######## Ups BETHLEHEM MLE
Up_bmle=n*(lambda2+1)*(1+n*(lambda2+1)*beta_mle)^(-(1+alpha_mle))
Ups_bmle=Up_bmle/(lambda2+1)
Ups_bmle[length(lambda2)]
######## Ups SKINNER MM
Ups_smm <- nrow(data)*((1+(n*(lambda2+1))*beta_mm)/(1+n*beta_mm))^(-1-alpha_mm)
Ups_smm[length(lambda2)]
######## Ups SKINNER MLE
Ups_smle <- nrow(data)*((1+(n*(lambda2+1))*beta_mle)/(1+n*beta_mle))^(-1-alpha_mle)
Ups_smle[length(lambda2)]
######## STIME BETHLEHEM & SKINNER CON K=90000
K1=90000
beta_mm_K1=sum(norm^2)/(N*f_bar*(dim(data)[1]-1))-1/N
alpha_mm_K1=1/(K1*beta_mm_K1)
alpha_mle_K1 <- out$estimate[1]
beta_mle_K1 <- 1/(K1*alpha_mle_K1)
Up_bmm_K1=N*(1+N*beta_mm_K1)^(-(1+alpha_mm_K1))
Ups_bmm_K1=Up_bmm_K1*n/N
Up_bmle_K1=N*(1+N*beta_mle_K1)^(-(1+alpha_mle_K1))
Ups_bmle_K1=Up_bmle_K1*n/N
Ups_smm_K1 <- nrow(data)*((1+N*beta_mm_K1)/(1+n*beta_mm_K1))^(-1-alpha_mm_K1)
Ups_smle_K1 <- nrow(data)*((1+N*beta_mle_K1)/(1+n*beta_mle_K1))^(-1-alpha_mle_K1)
######## Ups EMPRICAL BAYES
stima_eb=rep(1,length(lambda1))
for(t in 1:length(lambda1))
{
stima_eb[t]=0
for(i in 1:dim(freqfreq0)[2])
{
stima_eb[t]=stima_eb[t]+(((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda1[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i])
}
}
library(ggplot2)
df1 <- data.frame(lambda1[1:10],stima_eb[1:10])
ggplot(df1, aes(x=lambda1[1:10]))
Plot1 <- ggplot(df1,  aes(x=LAMBDA, y=ESTIMATE)) +
geom_line(aes(x=lambda1[1:10], y=stima_eb[1:10], col="stima_eb"),size=2.5)
Plot1 +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
######## Ups POISSON & BINOMIAL
stima_eb_poiss = rep(0,length(lambda2))
for(t in 1:length(lambda2))
{
par_poiss=(1/(4*lambda2[t]))*log(n/(2*lambda2[t]-1))
#c[t]=((lambda2[t]/(1+lambda2[t]))^(2))*((1+lambda2[t])/(1+2*lambda2[t]))
par_bin1=round((2/7)*log2((n*4*lambda2[t]^2)/((2^(7/2)-1)*((lambda2[t])^(2))-2*lambda2[t]-1)))
stima_eb_poiss[t]=0
stima_eb_bin1[t]=0
for(i in 1:dim(freqfreq0)[2])
{
valore_poiss=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-ppois(freqfreq0[1,i]-1,par_poiss))
if(is.na(valore_poiss))
{
valore_poiss=0
}
stima_eb_poiss[t]=stima_eb_poiss[t]+valore_poiss
valore_bin1=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-pbinom(freqfreq0[1,i]-1,par_bin1,1/(lambda2[t]+1)))
if(is.na(valore_bin1))
{
valore_bin1=0
}
stima_eb_bin1[t]=stima_eb_bin1[t]+valore_bin1
}
}
stima_poiss <- read.table("stima_eb_poiss_3.txt")
stima_eb_poiss <- stima_poiss$V1
stima_eb_poiss[length(lambda2)]
stima_eb_bin1[length(lambda2)]
######## Ups POISSON & BINOMIAL
stima_eb_poiss = rep(0,length(lambda2))
for(t in 1:length(lambda2))
{
par_poiss=(1/(4*lambda2[t]))*log(n/(2*lambda2[t]-1))
#c[t]=((lambda2[t]/(1+lambda2[t]))^(2))*((1+lambda2[t])/(1+2*lambda2[t]))
par_bin1=round((2/7)*log2((n*4*lambda2[t]^2)/((2^(7/2)-1)*((lambda2[t])^(2))-2*lambda2[t]-1)))
stima_eb_poiss[t]=0
stima_eb_bin1[t]=0
for(i in 1:dim(freqfreq0)[2])
{
valore_poiss=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-ppois(freqfreq0[1,i]-1,par_poiss))
if(is.na(valore_poiss))
{
valore_poiss=0
}
stima_eb_poiss[t]=stima_eb_poiss[t]+valore_poiss
valore_bin1=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-pbinom(freqfreq0[1,i]-1,par_bin1,1/(lambda2[t]+1)))
if(is.na(valore_bin1))
{
valore_bin1=0
}
stima_eb_bin1[t]=stima_eb_bin1[t]+valore_bin1
}
}
stima_eb_bin1 = rep(0,length(lambda2))
for(t in 1:length(lambda2))
{
par_poiss=(1/(4*lambda2[t]))*log(n/(2*lambda2[t]-1))
#c[t]=((lambda2[t]/(1+lambda2[t]))^(2))*((1+lambda2[t])/(1+2*lambda2[t]))
par_bin1=round((2/7)*log2((n*4*lambda2[t]^2)/((2^(7/2)-1)*((lambda2[t])^(2))-2*lambda2[t]-1)))
stima_eb_poiss[t]=0
stima_eb_bin1[t]=0
for(i in 1:dim(freqfreq0)[2])
{
valore_poiss=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-ppois(freqfreq0[1,i]-1,par_poiss))
if(is.na(valore_poiss))
{
valore_poiss=0
}
stima_eb_poiss[t]=stima_eb_poiss[t]+valore_poiss
valore_bin1=((((-1)^(freqfreq0[1,i]-1))*(freqfreq0[1,i])*((lambda2[t])^(freqfreq0[1,i]-1))*freqfreq0[2,i]))*(1-pbinom(freqfreq0[1,i]-1,par_bin1,1/(lambda2[t]+1)))
if(is.na(valore_bin1))
{
valore_bin1=0
}
stima_eb_bin1[t]=stima_eb_bin1[t]+valore_bin1
}
}
stima_poiss <- read.table("stima_eb_poiss_3.txt")
stima_eb_poiss <- stima_poiss$V1
stima_eb_poiss[length(lambda2)]
stima_eb_bin1[length(lambda2)]
######## PLOT
library(ggplot2)
df <- data.frame(lambda2,Ups_bmm,Ups_bmle,Ups_smm,Ups_smle,stima_eb_poiss,stima_eb_bin1)
ggplot(df, aes(x=lambda2))
Plot <- ggplot(df,  aes(x=LAMBDA, y=ESTIMATES)) +
geom_line(aes(x=lambda2, y=Ups_bmm, col="Ups_bmm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_bmle, col="Ups_bmle"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smm, col="Ups_smm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smle, col="Ups_smle"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_poiss, col="stima_eb_poiss"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_bin1, col="stima_eb_bin1"),size=2.5) +
geom_point(aes(x=9, y=469, col="black"), size=2.5)
Plot +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
df <- data.frame(lambda2,Ups_bmm,Ups_bmle,Ups_smm,Ups_smle,stima_eb_poiss,stima_eb_bin1)
ggplot(df, aes(x=lambda2))
Plot <- ggplot(df,  aes(x=LAMBDA, y=ESTIMATES)) +
geom_line(aes(x=lambda2, y=Ups_bmm, col="Ups_bmm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_bmle, col="Ups_bmle"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smm, col="Ups_smm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smle, col="Ups_smle"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_poiss, col="stima_eb_poiss"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_bin1, col="stima_eb_bin1"),size=2.5) +
geom_point(aes(x=9, y=469, col=black), size=2.5)
Plot +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
df <- data.frame(lambda2,Ups_bmm,Ups_bmle,Ups_smm,Ups_smle,stima_eb_poiss,stima_eb_bin1)
ggplot(df, aes(x=lambda2))
Plot <- ggplot(df,  aes(x=LAMBDA, y=ESTIMATES)) +
geom_line(aes(x=lambda2, y=Ups_bmm, col="Ups_bmm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_bmle, col="Ups_bmle"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smm, col="Ups_smm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smle, col="Ups_smle"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_poiss, col="stima_eb_poiss"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_bin1, col="stima_eb_bin1"),size=2.5) +
geom_point(aes(x=9, y=469, colour="black"), size=2.5)
Plot +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
df <- data.frame(lambda2,Ups_bmm,Ups_bmle,Ups_smm,Ups_smle,stima_eb_poiss,stima_eb_bin1)
ggplot(df, aes(x=lambda2))
Plot <- ggplot(df,  aes(x=LAMBDA, y=ESTIMATES)) +
geom_line(aes(x=lambda2, y=Ups_bmm, col="Ups_bmm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_bmle, col="Ups_bmle"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smm, col="Ups_smm"),size=2.5) +
geom_line(aes(x=lambda2, y=Ups_smle, col="Ups_smle"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_poiss, col="stima_eb_poiss"),size=2.5) +
geom_line(aes(x=lambda2, y=stima_eb_bin1, col="stima_eb_bin1"),size=2.5) +
geom_point(aes(x=9, y=469), size=2.5)
Plot +  theme(legend.title=element_blank()) +
theme(legend.justification=c(1,1), legend.position=c(1,1)) +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14,face="bold"))
